BootStrap: docker
From: nvidia/cuda:12.5.0-devel-ubuntu22.04

%files
    /gpfs/fs7/aafc/phenocart/PhenomicsProjects/UFPSGPSCProject/4_Assets/Singularity/TrainingContainers/requirements.txt /Script/requirements.txt

%post
    export DEBIAN_FRONTEND=noninteractive
    ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
    echo "Etc/UTC" > /etc/timezone

    # Basic updates and installs
    apt-get update && apt-get install -y \
        software-properties-common \
        wget git build-essential \
        tzdata \
        libgl1-mesa-glx libglib2.0-0 \
        libcurl4 \
        gnupg curl \
        && apt-get clean && rm -rf /var/lib/apt/lists/*

    # (Optional) If you really need to pull in a jammy-updates libc6
    # apt-get update && apt-get install --only-upgrade libc6 libc6-dev libc-dev-bin -y

    # Add MongoDB 8.0 repository FOR UBUNTU 22.04 (jammy), not 'noble'
    curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc \
        | gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor

    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] \
      https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse" \
      | tee /etc/apt/sources.list.d/mongodb-org-8.0.list

    apt-get update
    apt-get install -y mongodb-org

    mkdir -p /data/db /var/log/mongodb
    chmod -R 755 /data/db /var/log/mongodb
    echo "MongoDB installed successfully"

    # Install Python 3.12 (deadsnakes PPA)
    add-apt-repository ppa:deadsnakes/ppa -y
    apt-get update && apt-get install -y \
        python3.12 python3.12-venv python3.12-dev python3-pip \
        && apt-get clean && rm -rf /var/lib/apt/lists/*

    # Set Python 3.12 as default
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1
    update-alternatives --set python3 /usr/bin/python3.12

    # Create virtual environment
    mkdir -p /app
    python3 -m venv /app/venv
    chmod -R 755 /app/venv

    # Install pip packages in the venv
    /app/venv/bin/python3 -m pip install --upgrade pip setuptools wheel
    /app/venv/bin/python3 -m pip install --no-cache-dir -r /Script/requirements.txt

%environment
    # Set environment variables for Python and CUDA
    export PATH=/app/venv/bin:$PATH
    export PYTHONPATH=/app/venv/lib/python3.12/site-packages:$PYTHONPATH
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
    export CUDA_HOME=/usr/local/cuda
    export TF_FORCE_GPU_ALLOW_GROWTH=true

    # Ensure virtual environment is activated
    export VIRTUAL_ENV=/app/venv
    export PATH="$VIRTUAL_ENV/bin:$PATH"

%runscript
    # Ensure virtual environment is used when running the container
    export PATH=/app/venv/bin:$PATH
    export PYTHONPATH=/app/venv/lib/python3.12/site-packages:$PYTHONPATH

    # Start MongoDB service
    echo "Starting MongoDB..."
    mongod --dbpath /data/db --bind_ip 0.0.0.0 --fork --logpath /var/log/mongodb.log

    # Run the provided command inside the virtual environment
    exec python3 "$@"
